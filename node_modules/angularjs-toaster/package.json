{
  "name": "angularjs-toaster",
  "version": "0.4.15",
  "description": "AngularJS Toaster is a customized version of toastr non-blocking notification javascript library",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": {
    "name": "Jiri Kavulak"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/jirikavi/AngularJS-Toaster.git"
  },
  "dependencies": {},
  "devDependencies": {
    "angular": ">1.2.6",
    "angular-animate": "~1.2.8"
  },
  "readme": "AngularJS-Toaster\r\n=================\r\n\r\n**AngularJS Toaster** is an AngularJS port of the **toastr** non-blocking notification jQuery library. It requires AngularJS v1.2.6 or higher and angular-animate for the CSS3 transformations. \r\n(I would suggest to use /1.2.8/angular-animate.js, there is a weird blinking in newer versions.)\r\n\r\n### Current Version 0.4.15\r\n\r\n## Demo\r\n- Simple demo is at http://plnkr.co/edit/HKTC1a\r\n- Older versions are http://plnkr.co/edit/1poa9A or http://plnkr.co/edit/4qpHwp or http://plnkr.co/edit/lzYaZt (with version 0.4.5)\r\n- Older version with Angular 1.2.0 is placed at http://plnkr.co/edit/mejR4h\r\n- Older version with Angular 1.2.0-rc.2 is placed at http://plnkr.co/edit/iaC2NY\r\n- Older version with Angular 1.1.5 is placed at http://plnkr.co/mVR4P4\r\n\r\n## Getting started\r\n\r\nOptionally: to install with bower, use:\r\n```\r\nbower install --save angularjs-toaster\r\n```\r\nor with npm :\r\n```\r\nnpm install --save angularjs-toaster\r\n```\r\n* Link scripts:\r\n\r\n```html\r\n<link href=\"https://cdnjs.cloudflare.com/ajax/libs/angularjs-toaster/0.4.9/toaster.min.css\" rel=\"stylesheet\" />\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.2.0/angular.min.js\" ></script>\r\n<script src=\"https://code.angularjs.org/1.2.0/angular-animate.min.js\" ></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/angularjs-toaster/0.4.9/toaster.min.js\"></script>\r\n```\r\n\r\n* Add toaster container directive: \r\n\r\n```html\r\n<toaster-container></toaster-container>\r\n```\r\n\r\n* Prepare the call of toaster method:\r\n\r\n```js\r\n// Display an info toast with no title\r\nangular.module('main', ['toaster', 'ngAnimate'])\r\n\t.controller('myController', function($scope, toaster) {\r\n\t    $scope.pop = function(){\r\n\t        toaster.pop('success', \"title\", \"text\");\r\n\t    };\r\n\t});\r\n```\r\n\r\n* Call controller method on button click:\r\n\r\n```html\r\n<div ng-controller=\"myController\">\r\n    <button ng-click=\"pop()\">Show a Toaster</button>\r\n</div>\r\n```\r\n\r\n### Close Button\r\n\r\nThe Close Button's visibility can be configured at three different levels:\r\n\r\n* Globally in the config for all toast types:\r\n```html\r\n<toaster-container toaster-options=\"'close-button': true\"></toaster-container>\r\n```\r\n\r\n* Per info-class type:\r\nBy passing the close-button configuration as an object instead of a boolean, you can specify the global behavior an info-class type should have.\r\n```html\r\n<toaster-container toaster-options=\"\r\n    {'close-button':{ 'toast-warning': true, 'toast-error': false } }\">\r\n</toaster-container>\r\n```\r\nIf a type is not defined and specified, the default behavior for that type is false.\r\n\r\n* Per toast constructed via toaster.pop('success', \"title\", \"text\"):\r\n```html\r\ntoaster.pop({\r\n                type: 'error',\r\n                title: 'Title text',\r\n                body: 'Body text',\r\n                showCloseButton: true\r\n            });\r\n```\r\nThis option is given the most weight and will override the global configurations for that toast.  However, it will not persist to other toasts of that type and does not alter or pollute the global configuration.\r\n\r\n### Body Output Type\r\nThe rendering of the body content is configurable at both the Global level, which applies to all toasts, and the individual toast level when passed as an argument to the toast.\r\n\r\nThere are three types of body renderings: trustedHtml', 'template', 'templateWithData'.\r\n\r\n - trustedHtml:  When using this configuration, the toast will parse the body content using \r\n\t`$sce.trustAsHtml(toast.body)`.\r\n\tIf the html can be successfully parsed, it will be bound to the toast via `ng-bind-html`.  If it cannot be parsed as \"trustable\" html, an exception will be thrown.\t\r\n\r\n - template:  Will use the `toast.body` if passed as an argument, else it will fallback to the template bound to the `'body-template': 'toasterBodyTmpl.html'` configuration option.\r\n \r\n - templateWithData: \r\n\t - Will use the `toast.body` if passed as an argument, else it will fallback to the template bound to the `'body-template': 'toasterBodyTmpl.html'` configuration option.\r\n\t - Assigns any data associated with the template to the toast.\r\n\r\nAll three options can be configured either globally for all toasts or individually per toast.pop() call.  If the `body-output-type` option is configured on the toast, it will take precedence over the global configuration for that toast instance.\r\n\r\n - Globally:\r\n```html\r\n<toaster-container toaster-options=\"'body-output-type': 'template'\"></toaster-container>\r\n```\r\n - Per toast:\r\n  \r\n```js\r\ntoaster.pop({\r\n            type: 'error',\r\n            title: 'Title text',\r\n            body: 'Body text',\r\n            bodyOutputType: 'trustedHtml'\r\n});\r\n```\r\n\r\n### On Hide Callback\r\nA callback function can be attached to each toast instance.  The callback will be invoked upon toast removal.  This can be used to chain toast calls.\r\n\r\n```js\r\ntoaster.pop({\r\n            title: 'A toast',\r\n\t\t    body: 'with a callback',\r\n\t\t\tonHideCallback: function () { \r\n\t\t\t    toaster.pop({\r\n\t\t\t        title: 'A toast',\r\n\t\t\t\t    body: 'invoked as a callback'\r\n\t\t\t\t});\r\n\t\t\t}\r\n});\r\n```\r\n\r\n\r\n### Other Options\r\n\r\n```html\r\n// Change display position\r\n<toaster-container toaster-options=\"{'position-class': 'toast-top-full-width'}\"></toaster-container>\r\n```\r\n\r\n### Animations\r\nUnlike toastr, this library relies on ngAnimate and CSS3 transformations for optional animations.  To include and use animations, add a reference to angular-animate.min.js (as described in Getting started - Link scripts) and add ngAnimate as a dependency alongside toaster. \r\n\r\n```js\r\n// Inject ngAnimate to enable animations\r\nangular.module('main', ['toaster', 'ngAnimate']);\r\n```\r\nIf you do not want to use animations, you can safely remove the angular-animate.min.js reference as well as the injection of ngAnimate.  Toasts will be displayed without animations.\r\n\r\n\t\t\r\n## Author\r\n**Jiri Kavulak**\r\n\r\n## Credits\r\nInspired by http://codeseven.github.io/toastr/demo.html.\r\n\r\n## Copyright\r\nCopyright Â© 2013 [Jiri Kavulak](https://twitter.com/jirikavi).\r\n\r\n## License \r\nAngularJS-Toaster is under MIT license - http://www.opensource.org/licenses/mit-license.php\r\n\r\n##Changes Log\r\n## v0.4.13\r\n- Add option in function toaster.pop() , `toastId` to define 'uid', use the function 'toaster.clear ()'\r\n\r\n```js\r\nvar _toaster = {\r\n                    type:      null,\r\n                    title:     null,\r\n                    body:      null,\r\n                    timeout:   null,\r\n                    toasterId: 'CategoryMenu',\r\n                    toastId:   'CategoryMenuAlert'\r\n                }\r\n```\r\n\r\n- Add option in function toaster.clear()\r\n * toaster.clear(); --> clearAll with ToasterId = undefined;\r\n * toaster.clear('*'); -> ClearAll()\r\n * toaster.clear('clearID'); -> clearAll() with toaster have ToasterId = 'clearID'\r\n* toaster.clear('clearID', 'toastID'); -> Just clearAll with toasts have uid = 'toastID' in  ToasterId = 'clearID'.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jirikavi/AngularJS-Toaster/issues"
  },
  "_id": "angularjs-toaster@0.4.15",
  "dist": {
    "shasum": "efdfec0583f3f6ec6a0967def619ae75469dc844"
  },
  "_from": "angularjs-toaster@",
  "_resolved": "https://registry.npmjs.org/angularjs-toaster/-/angularjs-toaster-0.4.15.tgz"
}
