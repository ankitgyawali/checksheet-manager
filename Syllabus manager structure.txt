Collection -> Document

##
RootUser ->
    UserName:
    Password:

##
Advisor ->
Username, Pwd, ID
 FName, LName
 Phone,
 Email,
 Office,
 Type,
 Advisor List,
 Department
(can add advisor, students and checksheets)

##
Student ->
Username, Pwd, ID
FName, LName,
ChecksheetPrototypeID, 
ClassStatus (Threeples of TermWhenTaken, PassedOrNot & Class ID ), LockedClasses,
Major


Checksheet Prototype->
University Requirement
Concomitant Requirement
CorePart   [Classes --> Suggested Term (Locked/Unlocked by Default)]
CourseName(UniqueCOde will be the unique identifier)


Class==>
Optional Time
Class Name
Class Description (Can be modified later)

Department==>
DepartmentName
DepartmentID
===
Root will add heads/profesoors
Root/Head will add classes
Rood/Head will use classes to add checksheet prototypes
Head/Professors will add Students and match them with prototypes
Its Student job to maintain his prototype
Advisor will make necessary edits
===
Later:

Provide acess control via Department type
Department useful for grouping
Search?? Tutorials?

===
Routing:

Home -> 
: Homecontroller  -> If not logged in Loginpage

Routes Maintained so far:

Client:

/login -> Set scope.username to student by default, scope.usernamelogout same
Add: Feature of bookmark for each user type /advisor points to login with scope set to advisor

/dashboard -> Checks login


Server:

post /login : Auth services

get /logout : logout Auth services

get /dashboard: Branch out??